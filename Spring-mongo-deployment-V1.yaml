apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: data
  name: data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: data-bkp
  name: data-bkp
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongo
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: mongo
    spec:
      containers:
      - image: mongo
        imagePullPolicy: ""
        name: springboot-mongo
        ports:
        - containerPort: 27017
        resources: {}
        volumeMounts:
        - mountPath: /data/db
          name: data
        - mountPath: /data/bkp
          name: data-bkp
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data
      - name: data-bkp
        persistentVolumeClaim:
          claimName: data-bkp
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: mongo
  name: mongo
spec:
  type: NodePort
  ports:
  - name: "27017"
    port: 27017
    targetPort: 27017
  selector:
    io.kompose.service: mongo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: springboot
    version: v1
  name: springboot-v1
  namespace: default
spec:
  replicas: 1
  minReadySeconds: 45
  selector:
    matchLabels:
      app: springboot
      version: v1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: springboot
        version: v1
    spec:
      containers:
      - image: naveelh/spring-boot-mongo:2.0
        imagePullPolicy: IfNotPresent
        name: springboot
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: springboot
    version: v2
  name: springboot-v2
  namespace: default
spec:
  replicas: 1
  minReadySeconds: 45
  selector:
    matchLabels:
      app: springboot
      version: v2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: springboot
        version: v2
    spec:
      containers:
      - image: naveelh/spring-boot-mongo:3.0
        imagePullPolicy: IfNotPresent
        name: springboot
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  labels: #PODS
    app: springboot
  name: springboot
  namespace: default
spec:
  type: LoadBalancer
  ports:
  - name: "9090"
    port: 9090
    protocol: TCP
    targetPort: 8080
  selector:
    app: springboot
    #version: v2
  sessionAffinity: None
